# 問題 A – Timeout:
#
# 長さ n の入力列 T = [T1, T2, …, Tn] と閾値 S が与えられる。
# ここで Ti は時刻（非負整数）を表し、T は単調増加（非減少）になるとは限らないが、
# 入力の時点では順序を確認できる。
#
# 旅人が最初に時刻 0 に出発してから、
# 各時刻 Ti までの間隔が S 以下であれば安全（"Yes"）だが、
# もし任意の隙間が S を超えると危険（"No"）になる。
#
# 具体的には、T0 = 0 と定義すると、
# 「すべての i（1 ≤ i ≤ n）について Ti − T(i−1) ≤ S」
# が成り立つなら "Yes" さもなくば "No" を出力。
#
# 制約：
#   1 ≤ n ≤ 2×10^5
#   0 ≤ Ti ≤ 10^9
#   0 ≤ S ≤ 10^9
#
# 計算量 O(n) で解ける。

##################################################
# 自分の回答
##################################################
N, S = map(int, input().split())
T = list(map(int, input().split()))

last_tap = 0 #last_tapが不要(Tのindexで見ればよかった)
for t in T: # range(1,N)の方がスマート
    if t - last_tap > S:
        print("No")
        break
    last_tap = t #不要
else:
    print("Yes")

##################################################
# 解説
##################################################
N, S = map(int, input().split())
T = list(map(int, input().split()))

if T[0] > s:
    print("No")
    exit()
for i in range(1,N):
    if t[i] - t[i - 1] > S:
        print("No")
        exit()
print("Yes")