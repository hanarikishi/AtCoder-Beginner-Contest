# 問題 D – Minimum Average Difference:
#
# 長さ N の整数列 A = [A1, A2, …, AN]（N ≥ 2）が与えられる。
# 各インデックス i（1 ≤ i ≤ N）で次を計算する：
#   - 左部分 A[1..i] の平均 floor( sum(A[1..i]) / i )
#   - 右部分 A[i+1..N] の平均 floor( sum(A[i+1..N]) / (N−i) )（ただし i = N のとき右の平均は 0 とする）
#  
# そして、これら2つの平均の差（絶対値）を D(i) = |左平均 − 右平均| と定義。
# 全ての i に対して D(i) を計算し、その最小値を与える **最小の i** を答えよ。
#
# 入力:
#   N
#   A1 A2 … AN
#
# 出力:
#   最小平均差を与えるインデックス i
#
# 制約:
#   2 ≤ N ≤ 2×10^5
#   −10^9 ≤ Ai ≤ 10^9
#
# 計算量 O(N) を目指す。

##################################################
# 解説
##################################################
# 複数のテストケースを処理
for _ in range(int(input())):
    n = int(input())      # 文字列の長さ
    s = input()           # 入力文字列（"0" と "1"）

    # 累積1の個数を右から数えて記録する配列（a[i] = s[i:]に含まれる"1"の個数）
    a = [0] * (n + 1)
    for i in reversed(range(n)):
        a[i] = a[i + 1] + (s[i] == "1")

    ans = n  # 最終的な答え（初期値：最大値にしておく）

    # f(l, r)：区間 [l, r) に対して評価関数を計算
    def f(l, r):
        global ans
        if l > r:
            return n  # 無効な区間に対しては最大値を返す

        # コスト計算式
        # 区間長 - 2 * （区間内の"1"の数） + 文字列全体の"1"の数
        # → "1" をうまく消すための操作コストに関係してると推定
        res = r - l - 2 * (a[l] - a[r]) + a[0]

        # 最小値を更新
        ans = min(ans, res)
        return res

    # g(lx, rx, ly, ry)：分割統治によって評価関数の最小値を求める
    # x軸を[lx, rx)で分割、y軸の候補は[ly, ry)
    def g(lx, rx, ly, ry):
        if lx >= rx or ly >= ry:
            return  # 範囲が空になったら終了

        tyx = (lx + rx) // 2  # 中央の x（mid）を選択
        best = n + 1          # 評価関数の最小値
        idx = -1              # 最小値を与える y（r）

        # 全ての y（r候補）に対して評価して、最小の組を選ぶ
        for i in range(ly, ry):
            fval = f(tyx, i)
            if fval < best:
                best = fval
                idx = i

        # 最小の idx を使って分割統治を再帰呼び出し
        g(lx, tyx, ly, idx + 1)  # 左半分のxに対して、最小y以下のみ探索
        g(tyx + 1, rx, idx, ry)  # 右半分のxに対して、最小y以上のみ探索

    # 探索開始：[l, r)区間を [0, n) の x と [0, n+1) の y で探索
    g(0, n, 0, n + 1)

    # 最終的な答えを出力
    print(ans)
